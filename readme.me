# üöÄ KuCoin EMA Scanner & Auto Trader

Un programme Python avanc√© pour scanner automatiquement les cryptomonnaies sur KuCoin et ex√©cuter des trades bas√©s sur les signaux EMA20 avec gestion automatique des Stop Loss et Take Profits via les niveaux de Fibonacci.

## ‚ú® Fonctionnalit√©s

### üîç Scanner Intelligent
- **Scan temps r√©el** de tous les coins sur KuCoin
- **D√©tection EMA20** : Identifie les coins qui franchissent leur EMA20 en timeframe 4h
- **Filtre volume** : D√©tecte les augmentations de volume >50% par rapport √† la bougie pr√©c√©dente
- **Filtre futures** : Ne s√©lectionne que les coins avec contrats perp√©tuels disponibles
- **Nouveaux listings** : Surveillance continue des nouveaux coins list√©s

### üí∞ Trading Automatis√©
- **Ordres intelligents** : Placement automatique d'ordres d'achat avec SL/TP
- **Fibonacci int√©gr√©** : Calcul automatique des niveaux TP bas√©s sur les retracements/extensions Fibonacci (timeframe 15min)
- **Gestion des risques** : Stop Loss configurables et Take Profits multiples (TP1, TP2, TP3)
- **Taille de position adaptative** : Calcul automatique bas√© sur le risque d√©fini

### üñ•Ô∏è Interface Utilisateur
- **Interface Streamlit** moderne et intuitive
- **Dashboard en temps r√©el** avec m√©triques de performance
- **Configuration flexible** : Param√©trage complet des strat√©gies
- **Logs d√©taill√©s** : Suivi de toutes les transactions et signaux
- **Graphiques de performance** : Visualisation des r√©sultats

## üì¶ Installation

### Pr√©requis
- Python 3.8 ou sup√©rieur
- Compte KuCoin avec API activ√©e
- TA-Lib install√© sur votre syst√®me

### Installation des d√©pendances

```bash
# Cloner le projet
git clone <repository-url>
cd kucoin-ema-scanner

# Installer les d√©pendances Python
pip install -r requirements.txt

# Installation de TA-Lib (requis pour l'analyse technique)
# Sur Windows : t√©l√©charger le wheel depuis https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib
# Sur macOS : brew install ta-lib
# Sur Ubuntu/Debian : sudo apt-get install libta-lib-dev
```

## ‚öôÔ∏è Configuration

### 1. Configuration API KuCoin

Cr√©ez un fichier `.env` √† la racine du projet :

```env
# Configuration KuCoin API
KUCOIN_API_KEY=your_api_key_here
KUCOIN_API_SECRET=your_api_secret_here
KUCOIN_PASSPHRASE=your_passphrase_here
KUCOIN_SANDBOX=true  # false pour le trading r√©el

# Configuration optionnelle
LOG_LEVEL=INFO
```

### 2. Obtenir les cl√©s API KuCoin

1. Connectez-vous √† votre compte [KuCoin](https://www.kucoin.com)
2. Allez dans **API Management** dans les param√®tres
3. Cr√©ez une nouvelle API avec les permissions :
   - **General** (lecture du compte)
   - **Trade** (placement d'ordres)
   - **Futures** (acc√®s aux contrats √† terme)
4. Notez bien votre **Passphrase** lors de la cr√©ation
5. Configurez les restrictions IP si n√©cessaire

### 3. Configuration des param√®tres

Le fichier `config.py` contient tous les param√®tres configurables :

```python
# Scanner
SCAN_INTERVAL = 60  # Intervalle de scan en secondes
VOLUME_THRESHOLD = 50  # Seuil d'augmentation du volume en %
EMA_PERIOD = 20  # P√©riode EMA

# Trading
DEFAULT_POSITION_SIZE = 100  # Taille de position en USDT
DEFAULT_SL_PERCENT = 2.0  # Stop Loss en %
TP1_PERCENT = 1.5  # Take Profit 1 en %
TP2_PERCENT = 3.0  # Take Profit 2 en %
TP3_PERCENT = 5.0  # Take Profit 3 en %
```

## üöÄ Utilisation

### Lancement du programme

```bash
# Lancer l'interface graphique
streamlit run main.py

# Ou directement
python main.py
```

### Tests pr√©liminaires

```bash
# V√©rifier l'installation et la configuration
python main.py --test

# Afficher l'aide
python main.py --help
```

### Utilisation de l'interface

1. **Configuration** : Ajustez les param√®tres dans la barre lat√©rale
2. **D√©marrage** : Cliquez sur "‚ñ∂Ô∏è D√©marrer" pour lancer le scanner automatique
3. **Surveillance** : Consultez l'onglet "üéØ Signaux" pour voir les d√©tections
4. **Trading** : Ex√©cutez les trades manuellement ou configurez l'automatisation
5. **Suivi** : Surveillez vos positions dans "üíº Trades Actifs"

## üìä Structure du Projet

```
/kucoin-ema-scanner/
‚îú‚îÄ‚îÄ main.py              # Point d'entr√©e principal
‚îú‚îÄ‚îÄ scanner.py           # Logic de scan et d√©tection des signaux
‚îú‚îÄ‚îÄ trading.py           # Gestion des ordres et du trading
‚îú‚îÄ‚îÄ gui.py              # Interface utilisateur Streamlit
‚îú‚îÄ‚îÄ config.py           # Configuration globale
‚îú‚îÄ‚îÄ requirements.txt    # D√©pendances Python
‚îú‚îÄ‚îÄ README.md          # Documentation
‚îú‚îÄ‚îÄ .env               # Variables d'environnement (√† cr√©er)
‚îî‚îÄ‚îÄ trading.log        # Fichier de logs (g√©n√©r√© automatiquement)
```

## üõ°Ô∏è Strat√©gie de Trading

### Crit√®res de D√©tection
1. **EMA20 Crossover** : Le prix franchit l'EMA20 √† la hausse sur timeframe 4h
2. **Volume Spike** : Augmentation du volume >50% par rapport √† la bougie pr√©c√©dente
3. **Contrat Future** : Le coin doit avoir un contrat perp√©tuel disponible sur KuCoin

### Gestion des Positions
- **Entr√©e** : Ordre au march√© lors de la d√©tection du signal
- **Stop Loss** : Calcul√© automatiquement (d√©faut : 2% sous le prix d'entr√©e)
- **Take Profits** : 3 niveaux bas√©s sur les extensions de Fibonacci
  - TP1 : 1/3 de la position (niveau 1.272 ou 1.5% par d√©faut)
  - TP2 : 1/3 de la position (niveau 1.414 ou 3% par d√©faut)  
  - TP3 : 1/3 de la position (niveau 1.618 ou 5% par d√©faut)

### Calcul Fibonacci
- **Timeframe** : 15 minutes pour plus de pr√©cision
- **Swing Points** : D√©tection automatique des hauts/bas r√©cents
- **Niveaux utilis√©s** :
  - Extensions : 1.272, 1.414, 1.618, 2.0, 2.618
  - Retracements : 0.236, 0.382, 0.5, 0.618, 0.786

## üìà Fonctionnalit√©s Avanc√©es

### Scanner en Temps R√©el
- Surveillance continue de tous les march√©s KuCoin
- D√©tection automatique des nouveaux listings
- Filtrage intelligent des signaux de qualit√©

### Interface Dashboard
- **M√©triques en temps r√©el** : Solde, positions, performance
- **Graphiques interactifs** : √âvolution des P&L, historique des trades
- **Logs d√©taill√©s** : Tra√ßabilit√© compl√®te des op√©rations
- **Configuration dynamique** : Modification des param√®tres sans red√©marrage

### Gestion des Risques
- **Position Sizing** : Calcul automatique bas√© sur le risque d√©fini
- **Stop Loss adaptatif** : Ajustement selon la volatilit√© du march√©
- **Take Profits √©chelonn√©s** : R√©duction progressive du risque
- **Limite de drawdown** : Protection contre les pertes importantes

## ‚ö†Ô∏è Avertissements et Risques

### Risques du Trading Automatis√©
- **Pertes financi√®res** : Le trading comportes des risques de perte en capital
- **Volatilit√©** : Les cryptomonnaies sont extr√™mement volatiles
- **Bugs logiciels** : Aucun programme n'est exempt d'erreurs
- **Conditions de march√©** : Les strat√©gies peuvent ne pas fonctionner dans tous les environnements

### Bonnes Pratiques
1. **Testez d'abord en sandbox** avant le trading r√©el
2. **Commencez avec de petits montants** pour valider la strat√©gie
3. **Surveillez r√©guli√®rement** les positions ouvertes
4. **Sauvegardez vos cl√©s API** en s√©curit√©
5. **Gardez le logiciel √† jour** pour les correctifs de s√©curit√©

### Recommandations de S√©curit√©
- Utilisez des cl√©s API avec permissions limit√©es
- Configurez des restrictions IP sur vos cl√©s API
- Ne partagez jamais vos cl√©s API ou passphrase
- Utilisez un VPN si vous tradez depuis des r√©seaux publics
- Gardez des sauvegardes de votre configuration

## üîß D√©pannage

### Probl√®mes Courants

**Erreur "Exchange non initialis√©"**
- V√©rifiez vos cl√©s API dans le fichier `.env`
- Assurez-vous que les permissions API sont correctes
- Testez la connexion avec `python main.py --test`

**Erreur "TA-Lib non trouv√©"**
- Installez TA-Lib pour votre syst√®me d'exploitation
- Red√©marrez votre environnement Python apr√®s installation

**Aucun signal d√©tect√©**
- V√©rifiez que le seuil de volume n'est pas trop √©lev√©
- Assurez-vous que les march√©s sont actifs (heures de trading)
- Consultez les logs pour identifier d'√©ventuelles erreurs

**Interface Streamlit ne se charge pas**
- V√©rifiez que le port 8501 n'est pas utilis√©
- Essayez `streamlit run main.py --server.port 8502`
- Videz le cache avec `streamlit cache clear`

## üìö API et Documentation

### KuCoin API
- [Documentation officielle](https://docs.kucoin.com/)
- [Limites de taux](https://docs.kucoin.com/#request-rate-limit)
- [Code d'erreur](https://docs.kucoin.com/#errors)

### Biblioth√®ques Utilis√©es
- **CCXT** : Connexion aux exchanges de cryptomonnaies
- **TA-Lib** : Analyse technique et calculs d'indicateurs
- **Pandas** : Manipulation et analyse de donn√©es
- **Streamlit** : Interface utilisateur web
- **Plotly** : Graphiques interactifs

## ü§ù Contribution

Les contributions sont les bienvenues ! Pour contribuer :

1. Forkez le projet  
2. Cr√©ez une branche pour votre fonctionnalit√© (`git checkout -b feature/nouvelle-fonctionnalite`)
3. Committez vos changements (`git commit -am 'Ajout nouvelle fonctionnalit√©'`)
4. Poussez vers la branche (`git push origin feature/nouvelle-fonctionnalite`)
5. Ouvrez une Pull Request

### Id√©es d'Am√©liorations
- Support d'autres exchanges (Binance, OKX, etc.)
- Strat√©gies de trading additionnelles
- Backtesting int√©gr√©
- Notifications (Discord, Telegram, email)
- Mode paper trading
- API REST pour int√©grations externes

## üìÑ Licence

Ce projet est sous licence MIT. Voir le fichier `LICENSE` pour plus de d√©tails.

## üÜò Support

Pour obtenir de l'aide :

1. **Issues GitHub** : Signalez les bugs et demandez des fonctionnalit√©s
2. **Discussions** : Posez vos questions dans les discussions GitHub
3. **Documentation** : Consultez ce README et les commentaires du code

## üèÜ Remerciements

- **KuCoin** pour leur API robuste et bien document√©e
- **CCXT** pour l'excellente biblioth√®que d'acc√®s aux exchanges
- **Streamlit** pour l'outil de cr√©ation d'interfaces web en Python
- **La communaut√© open source** pour les nombreuses biblioth√®ques utilis√©es

---

**‚ö†Ô∏è Avertissement Final :** Ce logiciel est fourni "tel quel" sans aucune garantie. L'utilisation de ce programme pour le trading de cryptomonnaies comporte des risques financiers importants. Les utilisateurs sont enti√®rement responsables de leurs d√©cisions de trading et de toute perte financi√®re qui pourrait en r√©sulter. Tradez uniquement avec des fonds que vous pouvez vous permettre de perdre.